// ----------------------------------------
// PROFILE SYSTEM
// ----------------------------------------

model Profile {
  id          String      @id @default(cuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  profileType ProfileType
  isActive    Boolean     @default(false)
  levelId     String?
  level       Level?      @relation(fields: [levelId], references: [id], onUpdate: NoAction, onDelete: NoAction)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  applications ProfileApplication[]
  metrics      ProfileMetric?
  pointLogs    PointLog[]
  offerings    Offering[]

  // Profile type-specific relations
  photographerProfile PhotographerProfile?
  merchantProfile     MerchantProfile?

  @@unique([userId, profileType])
  @@index([profileType])
  @@index([profileType, levelId])
}

// profile validation
model ProfileApplication {
  id        String  @id @default(cuid())
  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  status      ApplicationStatus @default(PENDING)
  submittedAt DateTime          @default(now())
  reviewedAt  DateTime?
  reviewNotes String?           @db.Text

  // Application data stored as JSON
  applicationData Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId, status])
}

/// Holds data specific ONLY to Photographers.
model PhotographerProfile {
  id        String  @id @default(cuid())
  profileId String  @unique
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  // Photographer-specific fields
  description String?  @db.Text
  website     String?
  specialties String[]
}

/// Holds data specific ONLY to Merchants.
model MerchantProfile {
  id        String  @id @default(cuid())
  profileId String  @unique
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  // Merchant-specific fields
  companyName       String
  businessLicenseId String? @unique
  address           String?
  contactPhone      String?

  @@index([companyName])
}
