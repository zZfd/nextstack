model File {
  id           String     @id @default(cuid())
  userId       String
  filename     String
  originalName String
  mimeType     String
  size         BigInt
  storageKey   String     @unique
  url          String?    // Temporary URL, can be null
  status       FileStatus @default(PENDING)
  metadata     Json?      // Additional metadata like dimensions for images
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deletedAt    DateTime?  // Soft delete

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Indexes
  @@index([userId])
  @@index([status])
  @@index([createdAt])
  @@index([deletedAt])
}

enum FileStatus {
  PENDING    // File record created, upload not complete
  UPLOADED   // File successfully uploaded to storage
  PROCESSING // File is being processed (e.g., image resizing)
  READY      // File is processed and ready for use
  FAILED     // Upload or processing failed
  DELETED    // Soft deleted
}